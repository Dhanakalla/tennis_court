"""
Django settings for tennis_court project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
import dj_database_url
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-pte8)=dztx=0oynw76f)^w9g%6ft*9fxmogubi1rej7j==*d4l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# import os
# ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS", "localhost,127.0.0.1").split(",")
# ALLOWED_HOSTS = ["tennis-court-6.onrender.com", "localhost", "127.0.0.1"]


ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS", "").split(",")

# ALLOWED_HOSTS = ["127.0.0.1", "localhost"]

# ALLOWED_HOSTS = []

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_crontab',
    'core',
]


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",  # before Auth
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",  # after Sessions
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",

]

ROOT_URLCONF = 'tennis_court.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS':  [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'core.context_processors.custom_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'tennis_court.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'tennis_court',
#         'USER':'postgres',
#         'PASSWORD':'postgres',
#         'HOST':'localhost',
#         'PORT':5432,
#     }
# }


import dj_database_url

# DATABASES = {
#     'default': dj_database_url.config(
#         default=os.getenv("postgresql://tennis_court_db_443h_user:cTMywXQz08wso5UsU5IWjMfSWFGKbhkw@dpg-d2sk3h63jp1c73atm8qg-a.oregon-postgres.render.com/tennis_court_db_443h"),  # Render’s external DB URL
#         conn_max_age=600,
#         ssl_require=True
#     )
# }
# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }
DATABASES = {
    "default": dj_database_url.config(
        default="sqlite:///db.sqlite3"  # fallback to SQLite locally
    )
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL ="core.User"

LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = '/user/dashboard/'  # Where to go after login
LOGOUT_REDIRECT_URL = 'login'


from django.contrib.messages import constants as messages

MESSAGE_STORAGE = "django.contrib.messages.storage.session.SessionStorage"

MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'error',
}

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"




# -------------------------
# Session & Cookie Settings
# -------------------------

# Store sessions in the database (default & recommended)
SESSION_ENGINE = "django.contrib.sessions.backends.db"

# Default session lifetime (2 weeks = 1209600 seconds)
SESSION_COOKIE_AGE = 1209600  # 14 days

# If True → session cookie is deleted when browser closes (❌ disables Remember Me)
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

SESSION_COOKIE_SECURE = False             # True only on HTTPS
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = "Lax"


# settings.py
# EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"


# settings.py
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "dhananaidu11111@gmail.com"
EMAIL_HOST_PASSWORD = "kygx bawv fujt hxtz"  # Not your real Gmail password, but an App Password
